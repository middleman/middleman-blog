# frozen_string_literal: true

# The code was auto-generated by {this script}[https://github.com/cucumber/messages/blob/main/codegen/codegen.rb]
module Cucumber
  module Messages
    ##
    # Represents the JavaMethod message in Cucumber's {message protocol}[https://github.com/cucumber/messages].
    ##
    ##
    class JavaMethod < Message
      attr_reader :class_name

      attr_reader :method_name

      attr_reader :method_parameter_types

      def initialize(
        class_name: '',
        method_name: '',
        method_parameter_types: []
      )
        @class_name = class_name
        @method_name = method_name
        @method_parameter_types = method_parameter_types
        super()
      end

      ##
      # Returns a new JavaMethod from the given hash.
      # If the hash keys are camelCased, they are properly assigned to the
      # corresponding snake_cased attributes.
      #
      #   Cucumber::Messages::JavaMethod.from_h(some_hash) # => #<Cucumber::Messages::JavaMethod:0x... ...>
      ##
      def self.from_h(hash)
        return nil if hash.nil?

        new(
          class_name: hash[:className],
          method_name: hash[:methodName],
          method_parameter_types: hash[:methodParameterTypes]
        )
      end
    end
  end
end
